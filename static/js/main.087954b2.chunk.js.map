{"version":3,"sources":["index.js"],"names":["Square","props","className","isWinning","onClick","value","Board","i","winning","k","this","winningSquares","length","content","squares","n","push","renderSquare","renderSquares","renderRows","React","Component","Game","lines","state","reverseHistory","history","Array","fill","stepNumber","xIsNext","setState","a","b","c","d","e","slice","calculateWinner","concat","location","step","status","current","winner","moves","map","move","desc","jumpTo","reverseButtonDesc","reverseButton","handleReverseHistoryClick","reverse","handleClick","ReactDOM","render","document","getElementById"],"mappings":"wNAIA,SAASA,EAAOC,GACd,OACE,wBACEC,UAAW,WAAaD,EAAME,UAAY,kBAAoB,MAC9DC,QAASH,EAAMG,QAFjB,SAIGH,EAAMI,Q,IAKPC,E,kKACJ,SAAaC,GAEX,IAFe,IAAD,OACRC,GAAU,EACPC,EAAI,EAAGA,EAAIC,KAAKT,MAAMU,eAAeC,OAAQH,IAChDC,KAAKT,MAAMU,eAAeF,KAAOF,IACnCC,GAAU,GAGd,IAAIK,EAAUH,KAAKT,MAAMa,QAAQP,GAMjC,OAJEM,EADEL,EACQ,IAAME,KAAKT,MAAMa,QAAQP,GAEzBG,KAAKT,MAAMa,QAAQP,GAG7B,cAACP,EAAD,CAEEK,MAAOQ,EACPT,QAAS,kBAAM,EAAKH,MAAMG,QAAQG,KAF7B,UAAYA,K,2BAOvB,SAAcQ,GAEZ,IADA,IAAID,EAAU,GACLP,EAAIQ,EAAGR,EAAIQ,EAAI,EAAGR,IACzBO,EAAQE,KAAKN,KAAKO,aAAaV,IAEjC,OAAOO,I,wBAGT,SAAWP,GACT,OAAO,qBAAKL,UAAU,YAAf,SAA4BQ,KAAKQ,cAAcX,O,oBAGxD,WACE,OACE,gCACGG,KAAKS,WAAW,GAChBT,KAAKS,WAAW,GAChBT,KAAKS,WAAW,IAChBT,KAAKS,WAAW,IAChBT,KAAKS,WAAW,W,GA1CLC,IAAMC,WAgDpBC,E,kDACF,WAAYrB,GAAQ,IAAD,8BACf,cAAMA,IAkBVsB,MAAS,CACL,CAAC,EAAG,EAAG,EAAG,EAAG,GACb,CAAC,EAAE,EAAE,EAAE,EAAE,GACT,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,GAAG,GAAG,GAAG,GAAG,IACb,CAAC,EAAE,EAAE,GAAG,GAAG,IACX,CAAC,EAAE,EAAE,GAAG,GAAG,IACX,CAAC,EAAE,EAAE,GAAG,GAAG,IACX,CAAC,EAAE,EAAE,GAAG,GAAG,IACX,CAAC,EAAE,EAAE,GAAG,GAAG,IACX,CAAC,EAAE,EAAE,GAAG,GAAG,IACX,CAAC,EAAE,EAAE,GAAG,GAAG,KA7BX,EAAKC,MAAQ,CACbC,gBAAgB,EAChBC,QAAS,CACL,CACAZ,QAASa,MAAM,GAAGC,KAAK,QAG3BC,WAAY,EACZC,SAAS,GAVM,E,6DAanB,WACIpB,KAAKqB,SAAS,CACdN,gBAAiBf,KAAKc,MAAMC,mB,6BAmBhC,SAAgBX,GAEhB,IAAK,IAAIP,EAAI,EAAGA,EAAIG,KAAKa,MAAMX,OAAQL,IAAK,CACxC,kBAAsBG,KAAKa,MAAMhB,GAAjC,GAAOyB,EAAP,KAAUC,EAAV,KAAaC,EAAb,KAAeC,EAAf,KAAiBC,EAAjB,KACA,GAAItB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,IAAMpB,EAAQkB,KAAOlB,EAAQqB,IAAMrB,EAAQkB,KAAOlB,EAAQsB,GAChI,MAAO,CAACtB,EAAQkB,GAAIzB,GAGxB,OAAO,O,yBAGT,SAAYA,GACV,IA6BMmB,EAAUhB,KAAKc,MAAME,QAAQW,MAAM,EAAG3B,KAAKc,MAAMK,WAAa,GAE9Df,EADUY,EAAQA,EAAQd,OAAS,GACjBE,QAAQuB,QAC5B3B,KAAK4B,gBAAgBxB,IAAYA,EAAQP,KAG7CO,EAAQP,GAAKG,KAAKc,MAAMM,QAAU,IAAM,IACxCpB,KAAKqB,SAAS,CACZL,QAASA,EAAQa,OAAO,CACtB,CACEzB,QAASA,EACT0B,SAxCY,CAChB,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAeoBjC,MAGxBsB,WAAYH,EAAQd,OACpBkB,SAAUpB,KAAKc,MAAMM,a,oBAIzB,SAAOW,GACL/B,KAAKqB,SAAS,CACZF,WAAYY,EACZX,QAASW,EAAO,IAAM,M,oBAI1B,WAAU,IA4BJC,EACA/B,EA7BG,OACDe,EAAUhB,KAAKc,MAAME,QACrBiB,EAAUjB,EAAQhB,KAAKc,MAAMK,YAC7Be,EAASlC,KAAK4B,gBAAgBK,EAAQ7B,SAEtC+B,EAAQnB,EAAQoB,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EACT,cAAgBA,EAAO,KAAMrB,EAAQqB,GAAMP,SAAW,IACtD,mBACJ,OACE,6BACE,wBAAQpC,QAAS,kBAAM,EAAK6C,OAAOF,IAAnC,SACGA,GAAQ,EAAKvB,MAAMK,WAAa,4BAAImB,IAAYA,KAF5CD,MAOXG,EAAoBxC,KAAKc,MAAMC,eAC7B,+BACA,gCACE0B,EACJ,wBAAQ/C,QAAS,kBAAM,EAAKgD,6BAA5B,SACGF,IAgBL,OAbKxC,KAAKc,MAAMC,gBACdoB,EAAMQ,UAIJT,GACFF,EAAS,WAAaE,EAAO,GAC7BjC,EAAiBD,KAAKa,MAAMqB,EAAO,MAEnCF,EAAS,iBAAmBhC,KAAKc,MAAMM,QAAU,IAAM,KACtDnB,EAAiB,IAIlB,sBAAKT,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACG,cAACI,EAAD,CACCK,eAAgBA,EAChBG,QAAS6B,EAAQ7B,QACjBV,QAAS,SAAAG,GAAC,OAAI,EAAK+C,YAAY/C,QAGnC,sBAAKL,UAAU,YAAf,UACE,8BAAMwC,IACN,6BAAKG,IACL,8BAAMM,c,GAxJG/B,IAAMC,WAiKzBkC,IAASC,OAAO,cAAClC,EAAD,IAAUmC,SAASC,eAAe,W","file":"static/js/main.087954b2.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button\r\n      className={\"square \" + (props.isWinning ? \"square--winning\" : null)}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n      let winning = false;\r\n    for (var k = 0; k < this.props.winningSquares.length; k++) {\r\n      if (this.props.winningSquares[k] === i) {\r\n        winning = true;\r\n      }\r\n    }\r\n    let content = this.props.squares[i];\r\n    if (winning) {\r\n      content = \"*\" + this.props.squares[i] ;\r\n    } else {\r\n      content = this.props.squares[i];\r\n    }\r\n    return (\r\n      <Square\r\n        key={\"square \" + i}\r\n        value={content}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSquares(n) {\r\n    let squares = [];\r\n    for (let i = n; i < n + 5; i++) {\r\n      squares.push(this.renderSquare(i));\r\n    }\r\n    return squares;\r\n  }\r\n\r\n  renderRows(i) {\r\n    return <div className=\"board-row\">{this.renderSquares(i)}</div>;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderRows(0)}\r\n        {this.renderRows(5)}\r\n        {this.renderRows(10)}\r\n        {this.renderRows(15)}\r\n        {this.renderRows(20)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        reverseHistory: false,\r\n        history: [\r\n            {\r\n            squares: Array(9).fill(null)\r\n            }\r\n        ],\r\n        stepNumber: 0,\r\n        xIsNext: true\r\n        };\r\n    }\r\n    handleReverseHistoryClick() {\r\n        this.setState({\r\n        reverseHistory: !this.state.reverseHistory\r\n        });\r\n    }\r\n\r\n    lines  = [\r\n        [0, 1, 2, 3, 4],\r\n        [5,6,7,8,9],\r\n        [10,11,12,13,14],\r\n        [15,16,17,18,19],\r\n        [20,21,22,23,24],\r\n        [0,6,12,18,24],\r\n        [4,8,12,16,20],\r\n        [0,5,10,15,20],\r\n        [1,6,11,16,21],\r\n        [2,7,12,17,22],\r\n        [3,8,13,18,23],\r\n        [4,9,14,19,24]\r\n    ];\r\n\r\n    calculateWinner(squares) {\r\n    \r\n    for (let i = 0; i < this.lines.length; i++) {\r\n        const [a, b, c,d,e] = this.lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d] && squares[a] === squares[e]) {\r\n        return [squares[a], i];\r\n        }\r\n    }\r\n    return null;\r\n    }\r\n\r\n  handleClick(i) {\r\n    const locations = [\r\n      [1, 1],\r\n      [2, 1],\r\n      [3, 1],\r\n      [4, 1],\r\n      [5, 1],\r\n      [1, 2],\r\n      [2, 2],\r\n      [3, 2],\r\n      [4, 2],\r\n      [5, 2],\r\n      [1, 3],\r\n      [2, 3],\r\n      [3, 3],\r\n      [4, 3],\r\n      [5, 3],\r\n      [1, 4],\r\n      [2, 4],\r\n      [3, 4],\r\n      [4, 4],\r\n      [5, 4],\r\n      [1, 5],\r\n      [2, 5],\r\n      [3, 5],\r\n      [4, 5],\r\n      [5, 5]\r\n    ];\r\n\r\n    \r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (this.calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n          location: locations[i]\r\n        }\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = this.calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move\r\n        ? \"Go to move \" + move + \" (\" +history[move].location + \")\" \r\n        : \"Go to game start\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>\r\n            {move == this.state.stepNumber ? <b>{desc}</b> : desc}\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\nconst reverseButtonDesc = this.state.reverseHistory\r\n      ? \"Change to Ascending  History\"\r\n      : \"Change to Descending  History\";\r\n    const reverseButton = (\r\n      <button onClick={() => this.handleReverseHistoryClick()}>\r\n        {reverseButtonDesc}\r\n      </button>\r\n    );\r\n    if (!this.state.reverseHistory) {\r\n      moves.reverse();\r\n    }\r\n    let status;\r\n    let winningSquares;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner[0];\r\n      winningSquares = this.lines[winner[1]];\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n       winningSquares = [];\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n           <Board\r\n            winningSquares={winningSquares}\r\n            squares={current.squares}\r\n            onClick={i => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n          <div>{reverseButton}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}